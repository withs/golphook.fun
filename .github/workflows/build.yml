name: Build Release

on: [push]
jobs:
  build_release:
    name: build_release
    runs-on: windows-latest
    steps:
      - name: Setup Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86
      - name: checkout
        uses: actions/checkout@v2
      - name: version
        run: echo "::set-output name=version::$(type version)-$(echo '${{ github.sha }}'.substring(0, 7))"
        id: version
      - name: Install conan
        run: python -m pip install conan
      - name: Install Dependencies (Conan)
        run: mkdir conan && conan install . -if conan/ --build missing --settings arch=x86
      - name: Install Dependencies (Submodules)
        run: git submodule update --init --recursive
      - name: Generate cmake
        shell: cmd
        run: cmake -DCMAKE_BUILD_TYPE=Release -G "NMake Makefiles" . -B build
      - name: Build
        shell: cmd
        run: cmake --build build
      - name: Install powershell Zip
        shell: powershell
        run: Install-Module 7Zip4PowerShell -Force
      - name: Build Zip artifact
        shell: powershell
        run: powershell Compress-7Zip "build\bin" -Filter *.dll -ArchiveFileName "release.zip" -Format Zip
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload release bin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release.zip
          asset_name: release.zip
          asset_content_type: application/zip